[project]
name = "backend"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "santigandolfo", email = "santiago.gandolfo@tiendanube.com" }
]
dependencies = [
    "uvicorn>=0.28.0",
    "fastapi>=0.110.0",
    "python-multipart>=0.0.9",
    "email-validator>=2.1.1",
    "passlib>=1.7.4",
    "tenacity>=8.2.3",
    "pydantic>=2.6.4",
    "emails>=0.6",
    "gunicorn>=21.2.0",
    "jinja2>=3.1.3",
    "alembic>=1.13.1",
    "python-jose>=3.3.0",
    "httpx>=0.27.0",
    "psycopg>=3.1.18",
    "sqlmodel>=0.0.16",
    "bcrypt>=4.1.2",
    "pydantic-settings>=2.2.1",
    "sentry-sdk>=1.41.0",
]
requires-python = ">= 3.11"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.1.1",
    "pytest-cov>=4.1.0",
    "mypy>=1.9.0",
    "ruff>=0.3.2",
    "pre-commit>=3.6.2",
    "pytest-mock>=3.12.0",
    "types-python-jose>=3.3.4.20240106",
    "types-passlib>=1.7.7.20240311",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
fix = true
unsafe-fixes = true

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "N",      # pep8-naming
    "I",      # isort
    "UP",     # pyupgrade
    "C4",     # flake8-comprehensions
    "B",      # flake8-bugbear
    "Q",      # flake8-quotes
    "C90",    # flake8-quotes
    "ANN",    # flake8-annotations
    "ASYNC",  # flake8-async
    "S",      # flake8-bandit
    "COM",    # flake8-commas
    "T10",    # flake8-debugger
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "ARG",    # flake8-unused-arguments
    "TD",     # flake8-todos
    "FLY002", # flynt
    "RUF",    # Ruff-specific rules
]

ignore = [
    "S101",    # Allow asserts on tests
    "S311",    # Allow the use of random for non cryptographic code
    "B904",    # Allow raising exceptions without from e, for HTTPException
    "ANN401",  # Allow having Any type
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
line-ending = "lf"
